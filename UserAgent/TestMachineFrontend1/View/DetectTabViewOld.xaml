<UserControl x:Class="TestMachineFrontend1.View.DetectTabViewOld"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TestMachineFrontend1.View"
             xmlns:vm="clr-namespace:TestMachineFrontend1.ViewModel"
             xmlns:c="clr-namespace:TestMachineFrontend1.Commands"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="550">
    <!--<UserControl.Resources>
        <DataTemplate DataType="{x:Type vm:DetectTabViewModel}">
        </DataTemplate>
    </UserControl.Resources>-->

    <!--<UserControl.DataContext>
        <vm:MainWindowViewModel/>
    </UserControl.DataContext>-->
    <Grid Background="AliceBlue" Margin="0,0,0,0" Height="418" VerticalAlignment="Top">
        <!--list of available devices-->


        <!--TextBox for entering the IP-Adress of a device-->
        <!--DataContext="{Binding Path=CurrentViewModelDetectTab}"-->
            <TextBox ToolTip="Enter IP-Adress here"
                             Margin="288,40,32,343" FontSize="18"
                             TextAlignment="Center"
                             Text="{Binding CurrentViewModelDetectTab.IPAdressConnect}"/>
            <!--Button for establishing connection to device-->

        <!--Click="connectIP_button_Click">Connect</Button>-->
        <!--Command="{Binding ConnectIPCommand}"-->
    
        <Button x:Name="connectIP_button" Margin="316,119,32,278" 
                 Command="{Binding ConnectIPCommand}">Connect</Button>

        <!--x:Name="BackendList"-->
        <ListView HorizontalAlignment="Left" x:Name="raspiList"
                  Height="267" Margin="24,31,0,0" VerticalAlignment="Top"
                  Width="204" ItemsSource="{Binding CurrentViewModelDetectTab.BackendList}"
                  SelectedItem="{Binding CurrentViewModelDetectTab.SelectedRaspiItem}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"/>
                    <GridViewColumn Header="IP-Address" DisplayMemberBinding="{Binding Id}"/>
                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}"/>
                </GridView>
            </ListView.View>
        </ListView>

        <Button x:Name="readPin_button" Margin="315,247,163,141" Content="Read pin" 
                DataContext="{Binding Path=CurrentViewModelDetectTab}"
                Command="{Binding SendRequestCommand}" CommandParameter="{Binding ReadPin}" />
        <Button x:Name="writePin_button" Margin="397,247,85,141" Content="Write pin" 
                DataContext="{Binding Path=CurrentViewModelDetectTab}"
                Command="{Binding SendRequestCommand}" CommandParameter="{Binding WritePin}" />
        <TextBox Margin="250,247,248,141" TextAlignment="Center" Text="{Binding PinID}" />

        <Button x:Name="reset_button" Margin="473,247,10,141" Content="Reset" 
                DataContext="{Binding Path=CurrentViewModelDetectTab}"
                Command="{Binding SendRequestCommand}" CommandParameter="{Binding ResetPin}" />

        <Button x:Name="ledON_button" Margin="250,181,211,211" Content="LED ON" 
                DataContext="{Binding Path=CurrentViewModelDetectTab}"
                Command="{Binding SendRequestCommand}" CommandParameter="{Binding RequestLEDOn}"/>

        <Button x:Name="ledOFF_button" Margin="372,181,103,211" Content="LED OFF"  
                DataContext="{Binding Path=CurrentViewModelDetectTab}"
                Command="{Binding SendRequestCommand}" CommandParameter="{Binding RequestLEDOn}" />

        <TextBlock Margin="25,307,435,83"><Run Text="Volume"/></TextBlock>
        <TextBlock Margin="97,307,393,83"><Run Text="0"/></TextBlock>
        <Slider Name="setVolume_Slider" 
                            Maximum="127"
                            Minimum="0"
                            TickPlacement="BottomRight"
                            IsSnapToTickEnabled="True"
                            TickFrequency="3"
                            Margin="119,306,120,83"
                            Background="AliceBlue"/>
        <TextBlock Margin="392,307,92,83"><Run Text="127"/></TextBlock>

        <TextBox Text="{Binding ElementName=setVolume_Slider, Path=Value, UpdateSourceTrigger=PropertyChanged}" 
                             TextAlignment="Center" 
                             Margin="429,306,47,83" />

        <TextBlock Margin="25,348,415,42"><Run Text="DACVoltage"/></TextBlock>
        <TextBlock Margin="97,348,380,42"><Run Text="0.0 V"/></TextBlock>
        <Slider Name="vcSlider" 
                            Maximum="1.5"
                            Minimum="0.0"
                            TickPlacement="BottomRight"
                            IsSnapToTickEnabled="True"
                            TickFrequency="0.1"
                            Margin="132,348,120,42" />
        
        <TextBlock Margin="424,348,88,42"><Run Text="1.5 V"/></TextBlock>
        <TextBox Text="{Binding ElementName=vcSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" 
                             TextAlignment="Center" 
                             Margin="451,348,25,42" />

        <TextBlock Margin="531,348,9,42"><Run Text="V"/></TextBlock>

        <Button x:Name="connect_Pins" Content="Mux55" HorizontalAlignment="Left" 
                DataContext="{Binding Path=CurrentViewModelDetectTab}"
                Margin="478,181,0,0" VerticalAlignment="Top" Width="58" Height="26" 
                Command="{Binding SendRequestCommand}" CommandParameter="{Binding ConnectPins}" />

        <!--IsChecked="{Binding ElementName=MainWindow, Path=IsCheckBoxChecked}"-->
                <CheckBox x:Name="connected_checkbox" Content="" 
                          IsChecked="{Binding CurrentViewModelDetectTab.IsPiConnected}"
                          HorizontalAlignment="Left" 
                  Margin="288,103,0,0" VerticalAlignment="Top" IsEnabled="False" 
                              RenderTransformOrigin="2.35,0.6"/>
    </Grid>
</UserControl>
