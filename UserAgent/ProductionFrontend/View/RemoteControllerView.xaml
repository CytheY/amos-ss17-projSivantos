<UserControl x:Class="TestMachineFrontend1.View.RemoteControllerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:TestMachineFrontend1.ViewModel"
             xmlns:local="clr-namespace:TestMachineFrontend1.View"
             mc:Ignorable="d">

    <UserControl.DataContext>
        <vm:MainWindowViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <DataTemplate DataType="{x:Type vm:DebugViewModel}">
            </DataTemplate>
            <Style x:Key="AnimatedSwitch" TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="#FAFAFB" />
                <Setter Property="BorderBrush" Value="#EAEAEB" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Viewbox Stretch="Uniform">
                                <Canvas Name="Layer_1" Width="20" Height="20" Canvas.Left="10" Canvas.Top="0">
                                    <Ellipse  Canvas.Left="0" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                                    <Ellipse  Canvas.Left="15" Width="20" Height="20" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.5"/>
                                    <Border Canvas.Left="10" Width="15" Height="20" Name="rect416927" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0.5,0,0.5"/>
                                    <Ellipse x:Name="ellipse"  Canvas.Left="0" Width="20" Height="20" Fill="White" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="0.3">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform X="0" Y="0" />
                                        </Ellipse.RenderTransform>
                                        <Ellipse.BitmapEffect>
                                            <DropShadowBitmapEffect Softness="0.1" ShadowDepth="0.7" Direction="270" Color="#BBBBBB"/>
                                        </Ellipse.BitmapEffect>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True" >
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#e40060" Duration="0:0:0.2" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#e40060" Duration="0:0:0.2" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="15" KeySpline="0, 1, 0.6, 1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#FAFAFB" Duration="0:0:0.2" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="#EAEAEB" Duration="0:0:0.2" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0" Value="15"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.3" Value="0" KeySpline="0, 0.5, 0.5, 1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RedButtonFilled" TargetType="{x:Type Button}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFFF00B9"/>
                            <GradientStop Color="#FFFF006B" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#aa0048"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#d20098"/>
                                                <GradientStop Color="#aa0048" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <!--<Setter Property="Background" Value="DimGray"/>-->
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RedButtonStroke" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FFFF006B"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#FFFF006B"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#d20098"/>
                                                <GradientStop Color="#aa0048" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <!--<Setter Property="Background" Value="DimGray"/>-->
                                    <Setter Property="Foreground" Value="#FFFF006B"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlueButtonFilled" TargetType="{x:Type Button}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#07c6ff"/>
                            <GradientStop Color="#2283ff" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#0048a5"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#008db7"/>
                                                <GradientStop Color="#0048a5" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <!--<Setter Property="Background" Value="DimGray"/>-->
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlueButtonStroke" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#2283ff"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="#2283ff"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                                <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#07c6ff"/>
                                                <GradientStop Color="#2283ff" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <!--<Setter Property="Background" Value="DimGray"/>-->
                                    <Setter Property="Foreground" Value="#2283ff"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="UserControlsGrid" Grid.Column="0" Grid.Row="0" Background="#FFF9F9F9">
        <Grid.RowDefinitions>
            <RowDefinition Height="4*" MinHeight="300px"/>
        </Grid.RowDefinitions>
        <TabControl Margin="0,0,0.5,0"  Grid.Column="1" Grid.Row="1" Grid.RowSpan="3">
            <TabItem Header="User Controls">
                <Grid MaxWidth="510">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1.5*" MaxHeight="150px"/>
                        <RowDefinition Height="2*" MaxHeight="200px"/>
                        <RowDefinition Height="1*" MaxHeight="100px"/>
                    </Grid.RowDefinitions>

                    <Border  Margin="10,5,10,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="0" Grid.Column="0" Grid.RowSpan="1" >
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Grid.ColumnSpan"
              Value="4" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentViewModelRemoteController.MinimalViewVis}"
                      Value="Hidden">
                                        <Setter Property="Grid.ColumnSpan"
                  Value="2" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />

                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px" />
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <Label Margin="5,0" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" Grid.RowSpan="2" Content="BUTTONS" HorizontalAlignment="Left"  VerticalAlignment="Top"  Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE" Grid.ColumnSpan="4"/>

                            <Button Name="Push_Button" Height="25px" HorizontalAlignment="Center" Margin="10,15" 
                                    Grid.Row="1" Style="{StaticResource RedButtonFilled}" Width="100px" 
                                    Command="{Binding PressPushButtonCommand}">
                                <!--CommandParameter="{Binding Path=CurrentViewModelRemoteController.PressPushButton}"-->
                                <StackPanel>
                                    <TextBlock FontFamily="Arial">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="FontSize" Value="10" />
                                                <Setter Property="Text" Value="Push Button" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentViewModelRemoteController.MinimalViewVis}" Value="Hidden">
                                                        <Setter Property="FontSize" Value="7" />
                                                        <Setter Property="Text" Value="PB" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <CheckBox x:Name="Push_Checkbox" Grid.Row="1" Grid.Column="0"  HorizontalAlignment="Center"
                                VerticalAlignment="Bottom" Margin="15,0"
                                 IsChecked="{Binding IsPushButtonUp}" IsEnabled="True" Height="14" Width="15"/>
                            <Button Name="RockerSwitchUp_Button" Height="25px"   HorizontalAlignment="Center" 
                                    Margin="10,15"  Grid.Row="1" Grid.Column="1" Style="{StaticResource RedButtonFilled}"  
                                    Width="100px" Command="{Binding PressRockerSwitchUpCommand}">
                                <!--CommandParameter="{Binding Path=CurrentViewModelRemoteController.PressRockerSwitchUp}"-->
                                <StackPanel>
                                    <TextBlock FontFamily="Arial">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="FontSize" Value="10" />
                                                <Setter Property="Text" Value="Rocker ▲" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentViewModelRemoteController.MinimalViewVis}" Value="Hidden">
                                                        <Setter Property="FontSize" Value="7" />
                                                        <Setter Property="Text" Value="RSU" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <CheckBox x:Name="RockerSwitchUp_Checkbox" Checked="RockerSwitchUp_Checkbox_Checked" Unchecked="RockerSwitchUp_Checkbox_Checked" Grid.Row="1" Grid.Column="1"  HorizontalAlignment="Center"
                                VerticalAlignment="Bottom" Margin="15,0"
                                 IsChecked="{Binding IsRockerSwitchUp}" IsEnabled="True" Height="14" Width="15"/>
                            <Button Name="RockerSwitchDown_Button" Height="25px"  HorizontalAlignment="Center" Margin="10,15"  
                                    Grid.Row="1" Grid.Column="2" Style="{StaticResource RedButtonFilled}"  Width="100px"
                                    Command="{Binding PressRockerSwitchDownCommand}">
                                <!--CommandParameter="{Binding Path=CurrentViewModelRemoteController.PressRockerSwitchDown}"-->
                                <StackPanel>
                                    <TextBlock FontFamily="Arial">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="FontSize" Value="10" />
                                                <Setter Property="Text" Value="Rocker ▼" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentViewModelRemoteController.MinimalViewVis}" Value="Hidden">
                                                        <Setter Property="FontSize" Value="7" />
                                                        <Setter Property="Text" Value="RSD" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <CheckBox x:Name="RockerSwitchDown_Checkbox" Grid.Row="1" Grid.Column="2"  HorizontalAlignment="Center"
                                VerticalAlignment="Bottom" Margin="15,0"
                                 IsChecked="{Binding IsRockerSwitchDown}" IsEnabled="True" Checked="RockerSwitchDown_Checkbox_Checked" Unchecked="RockerSwitchDown_Checkbox_Checked" Height="14" Width="15"/>
                            <Button MaxHeight="30px" HorizontalAlignment="Center"   Height="25px"
                                    Grid.Row="1" Grid.Column="3" Style="{StaticResource RedButtonFilled}"  
                                    Width="100px" Click="press_Combination">
                                <StackPanel>
                                    <TextBlock FontFamily="Arial">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="FontSize" Value="10" />
                                                <Setter Property="Text" Value="Combine" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentViewModelRemoteController.MinimalViewVis}" Value="Hidden">
                                                        <Setter Property="FontSize" Value="7" />
                                                        <Setter Property="Text" Value="Combi" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </Button>
                            <Label VerticalAlignment="Center" Grid.Row="0" Grid.Column="2" Content="Duration" FontSize="10" Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI" Visibility="{Binding Path=CurrentViewModelRemoteController.MinimalViewVis}"/>

                            <ComboBox Grid.Row="0" Grid.Column="2" Name="durationBox" FontSize="10" Padding="5,2,5,0"
                  HorizontalAlignment="Center" Grid.ColumnSpan="2"
                  VerticalAlignment="Center" Width="100" Height="18" 
                  ItemsSource="{Binding Path=CurrentViewModelRemoteController.DurationItems}" 
                  SelectedValue="{Binding Path=CurrentViewModelRemoteController.SelectedDuration}"
                  IsSynchronizedWithCurrentItem="True"></ComboBox>
                        </Grid>
                    </Border>
                    <Border Name="TCoilBorder"  Margin="10,5,5,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="1">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>

                            </Grid.RowDefinitions>
                            <Label Margin="5,0" Grid.Column="0" Grid.Row="0"  Grid.RowSpan="2" Content="TCOIL" HorizontalAlignment="Left"  VerticalAlignment="Top"   Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                            <Image Margin="10" Grid.Row="1" MaxHeight="100px" HorizontalAlignment="Center" Source="..\img\telecoil_512_off.png"></Image>
                            <Image Margin="10" Grid.Row="1" MaxHeight="100px" HorizontalAlignment="Center" 
                                   Source="..\img\telecoil_512_on_right_gradient.png"
                                   Visibility="{Binding CurrentViewModelRemoteController.TcoilUpdate}"/>

                            <!--<Ellipse Grid.Row="1" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center" Width="40">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFFF00B9" Offset="0"/>
                                                    <GradientStop Color="#FFFF006B" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Ellipse Grid.Row="1"  HorizontalAlignment="Center" Height="10"  VerticalAlignment="Center" Width="10" RenderTransformOrigin="0.417,5.667">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFE2E2E2" Offset="1"/>
                                                    <GradientStop Color="White"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>-->
                            <Button Grid.Row="2" HorizontalAlignment="Center"  Style="{StaticResource RedButtonFilled}" 
                                    Height="20px" Width="50px"
                                    Command="{Binding DetectTCoilCommand}">
                                <!--CommandParameter="{Binding Path=CurrentViewModelRemoteController.DetectTCol}"-->
                                <StackPanel>
                                    <TextBlock Text="Detect" FontFamily="Arial" FontSize="8"/>
                                </StackPanel>
                            </Button>
                            <Button Grid.Row="3" HorizontalAlignment="Center"  Style="{StaticResource RedButtonFilled}" 
                                    Height="20px" Width="50px"
                                    Command="{Binding UndetectTCoilCommand}">
                                <!--CommandParameter="{Binding Path=CurrentViewModelRemoteController.UndetectTCol}"-->
                                <StackPanel>
                                    <TextBlock Text="Undetect" FontFamily="Arial" FontSize="8"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Border>
                    <Border Name="AudioShoeBorder" Margin="5,5,5,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="1" Grid.Column="1" Grid.RowSpan="1" Grid.ColumnSpan="1">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>

                            </Grid.RowDefinitions>
                            <Label Margin="5,0" Grid.Column="0" Grid.Row="0"  Grid.RowSpan="2" Content="AUDIO SHOE" HorizontalAlignment="Left"  VerticalAlignment="Top"   Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                            <Image Margin="10" Grid.Row="1" HorizontalAlignment="Center" MaxHeight="100px" Source="..\img\audio_shoe_512_off.png"></Image>
                            <Image Margin="10" Grid.Row="1" HorizontalAlignment="Center" MaxHeight="100px" 
                                   Source="..\img\audio_shoe_512_on_right_gradient.png"
                                   Visibility="{Binding CurrentViewModelRemoteController.AudioShoeUpdate}"/>

                            <!--  <Ellipse Grid.Row="1" HorizontalAlignment="Center" Height="40" VerticalAlignment="Center" Width="40">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFFF00B9" Offset="0"/>
                                                    <GradientStop Color="#FFFF006B" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>
                                        <Ellipse Grid.Row="1"  HorizontalAlignment="Center" Height="10"  VerticalAlignment="Center" Width="10" RenderTransformOrigin="0.417,5.667">
                                            <Ellipse.Fill>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFE2E2E2" Offset="1"/>
                                                    <GradientStop Color="White"/>
                                                </LinearGradientBrush>
                                            </Ellipse.Fill>
                                        </Ellipse>-->
                            <Button Grid.Row="2" HorizontalAlignment="Center"  Style="{StaticResource RedButtonFilled}" 
                                    Height="20px" Width="50px" Command="{Binding DetectAudioShoeCommand}">
                                <StackPanel>
                                    <TextBlock Text="Detect" FontFamily="Arial" FontSize="8"/>
                                </StackPanel>
                            </Button>
                            <Button Grid.Row="3" HorizontalAlignment="Center"  Style="{StaticResource RedButtonFilled}" 
                                    Height="20px" Width="50px" Command="{Binding UndetectAudioShoeCommand}">
                                <StackPanel>
                                    <TextBlock Text="Undetect" FontFamily="Arial" FontSize="8"/>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Border>
                    <Grid Grid.Column="3" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                    </Grid>
                    <Border Visibility="{Binding Path=CurrentViewModelRemoteController.MinimalViewVis}" Name="LEDBorder"  Margin="5,5,10,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="1" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="1">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="20" />


                            </Grid.RowDefinitions>
                            <Label Margin="5,0" Grid.Row="0" Grid.RowSpan="2" Content="LED" HorizontalAlignment="Left"  VerticalAlignment="Top"  Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>

                            <Image MaxHeight="100px" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10" Grid.Row="1" 
                                   Source="..\img\led_512_off.png"></Image>
                            <Image MaxHeight="100px" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10" Grid.Row="1" 
                                   Source="..\img\led_512_on_right_gradient.png" Visibility="{Binding Path=CurrentViewModelRemoteController.ToggleLEDButton}"></Image>
                            <Button HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,1,10,3" 
                                          Grid.Row="2" Style="{StaticResource RedButtonFilled}"  Width="100" Height="16"
                                          Command="{Binding CheckLEDStatusCommand}" >
                                <StackPanel>
                                    <TextBlock Text="Check LED Status" FontFamily="Arial" FontSize="8"/>
                                </StackPanel>
                            </Button>

                        </Grid>
                    </Border>
                    <Grid Grid.Row="1" Grid.Column="3"  Visibility="{Binding Path=CurrentViewModelRemoteController.MinimalViewVis}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"></RowDefinition>
                            <RowDefinition Height="1*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Name="ReceiverIDBorder" Margin="5,5,10,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="0">
                            <Border.Effect>
                                <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30px"/>
                                    <RowDefinition Height="2*"/>

                                </Grid.RowDefinitions>
                                <Label Margin="5,0,0,0" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Content="RECEIVER ID" HorizontalAlignment="Left"  VerticalAlignment="Top"  Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                                <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ComboBox Name="receiverBox" HorizontalAlignment="Center" Padding="5,2,0,0" FontSize="11"
                                              VerticalAlignment="Center" Width="90" Height="20" Grid.Row="2" 
                                              ItemsSource="{Binding Path=CurrentViewModelRemoteController.ReceiverItems}" 
                                              SelectedValue="{Binding Path=CurrentViewModelRemoteController.SelectedReceiverItem}"
                                              IsSynchronizedWithCurrentItem="True"/>
                                    <Button  VerticalAlignment="Center" Margin="2,0" Style="{StaticResource RedButtonFilled}" 
                                             Height="20px" Width="15px"
                                             IsEnabled="True" Command="{Binding SetReceiverCommand}">
                                        <StackPanel>
                                            <TextBlock Text="OK" FontFamily="Arial" FontSize="8"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Name="UpdateHIBorder" Margin="5,5,10,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="1">
                            <Border.Effect>
                                <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                            </Border.Effect>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30px"/>
                                    <RowDefinition Height="2*"/>

                                </Grid.RowDefinitions>
                                <Label Margin="10,0" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Content="UPDATE HI" HorizontalAlignment="Center"  VerticalAlignment="Top"  Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                                <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                                <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <ComboBox Name="availableHIList" HorizontalAlignment="Center" Padding="5,2,0,0" FontSize="11"
                                              VerticalAlignment="Center" Width="90" Height="20" Margin="2,0"
                                              ItemsSource="{Binding Path=CurrentViewModelRemoteController.HIListItems}"
                                              SelectedItem="{Binding Path=CurrentViewModelRemoteController.SelectedHI}"
                                              IsSynchronizedWithCurrentItem="True"/>
                                    <Button  VerticalAlignment="Center" Margin="2,0" Style="{StaticResource RedButtonFilled}" 
                                             Height="20px" Width="15px"
                                             IsEnabled="True" Command="{Binding SetHICommand}">
                                        <StackPanel>
                                            <TextBlock Text="OK" FontFamily="Arial" FontSize="8"/>
                                        </StackPanel>
                                    </Button>
                                </StackPanel>

                            </Grid>
                        </Border>

                    </Grid>

                    <Border Margin="10,5,5,5" Name="VolumeControlBorder" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="2" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Label Margin="5,0" Grid.Row="0" Grid.RowSpan="2" Content="VOLUME CONTROL" HorizontalAlignment="Left"  VerticalAlignment="Top"  Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>

                            <StackPanel HorizontalAlignment="Left" Grid.Row="1" Orientation="Vertical" Margin="10,0">
                                <StackPanel Orientation="Horizontal">
                                    <Label  Content="Stop-End VC" HorizontalContentAlignment="Center" FontSize="8" FontWeight="Bold" Foreground="#FF323C46" />
                                    <TextBox Text="{Binding ElementName=SetVolume_Slider, Path=Value, UpdateSourceTrigger=PropertyChanged}" Width="25px" Height="20px"  TextAlignment="Center" />
                                    <Label  Content="0" HorizontalContentAlignment="Center" FontSize="8" FontWeight="Bold" Foreground="#FF323C46" />
                                    <Slider  VerticalAlignment="Center" Name="SetVolume_Slider" Maximum="127" Minimum="0" 
                                             TickPlacement="TopLeft" IsSnapToTickEnabled="True" TickFrequency="1" 
                                             Width="90" Height="25" 
                                             Value="{Binding Path=CurrentViewModelRemoteController.CurrentVolumeLevel}"
                                             Thumb.DragCompleted="SetVolume_Slider_DragCompleted"/>
                                    <Label  Content="127" HorizontalContentAlignment="Center" FontSize="8" FontWeight="Bold" Foreground="#FF323C46" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                                    <Label  Content="Endless VC" HorizontalContentAlignment="Center" FontSize="8" FontWeight="Bold" Foreground="#FF323C46" />
                                    <Button Margin="5,0"  Style="{StaticResource RedButtonFilled}" Height="20px" Width="20px"
                                            Command="{Binding EndlessVcUpCommand}" 
                                            CommandParameter="{Binding Path=CurrentViewModelRemoteController.EndlessVcTicks}">
                                        <StackPanel>
                                            <TextBlock Text="▲" FontFamily="Arial" FontSize="8"/>
                                        </StackPanel>
                                    </Button>
                                    <Button Style="{StaticResource RedButtonFilled}" Height="20px" Width="20px"
                                            Command="{Binding EndlessVcDownCommand}" 
                                            CommandParameter="{Binding Path=CurrentViewModelRemoteController.EndlessVcTicks}">
                                        <StackPanel>
                                            <TextBlock Text="▼" FontFamily="Arial" FontSize="8"/>
                                        </StackPanel>
                                    </Button>
                                    <TextBox Text="{Binding Path=CurrentViewModelRemoteController.EndlessVcTicks, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="20px" Height="20px"  TextAlignment="Center" Margin="10,0,0,0"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <Border  Visibility="{Binding Path=CurrentViewModelRemoteController.MinimalViewVis}" Margin="5,5,10,5" Name="PowerControlBorder" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="2" Grid.Column="2" Grid.RowSpan="1" Grid.ColumnSpan="2">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="1*" />
                            </Grid.RowDefinitions>
                            <Label Margin="5,0" Grid.Row="0" Grid.RowSpan="2" Content="POWER" HorizontalAlignment="Left"  VerticalAlignment="Top"  Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>

                            <DockPanel Grid.Row="1"  HorizontalAlignment="Center">
                                <TextBox Text="{Binding ElementName=Power_Slider, Path=Value, UpdateSourceTrigger=PropertyChanged}" Width="20px" Height="20px" TextAlignment="Center"  />
                                <Label  Content="0 V" VerticalAlignment="Top"   FontSize="8" FontWeight="Bold" Foreground="#FF323C46" Margin="0,0,-20,0"  />
                                <Slider  VerticalAlignment="Center" Name="Power_Slider" 
                                         Maximum="1.5"
                                         Minimum="0.0"
                                         TickPlacement="TopLeft"
                                         IsSnapToTickEnabled="True"
                                         TickFrequency="0.1"
                                         Value="{Binding Path=CurrentViewModelRemoteController.CurrentPowerVoltage}"
                                         Thumb.DragCompleted="Power_Slider_DragCompleted"  Width="100" Height="25" />
                                <Label  Content="1,5 V" VerticalAlignment="Top"  FontSize="8" FontWeight="Bold" Foreground="#FF323C46" Margin="-20,0,0,0"   />
                                <Border Margin="10,0"  Width="1px" Background="#FFE1E8EE"/>
                                <Button Click="Button_Power_On_OnClick"  HorizontalAlignment="Right" Margin="5,0,0,0" Style="{StaticResource RedButtonFilled}" Height="20px" Width="20px">
                                    <StackPanel>
                                        <TextBlock Text="ON" FontFamily="Arial" FontSize="8"/>
                                    </StackPanel>
                                </Button>
                                <Button Click="Button_Power_OFF_OnClick" Style="{StaticResource RedButtonFilled}" Height="20px" Width="20px"  Margin="5,0" >
                                    <StackPanel>
                                        <TextBlock Text="OFF" FontFamily="Arial" FontSize="8"/>
                                    </StackPanel>
                                </Button>
                            </DockPanel>
                        </Grid>
                    </Border>

                </Grid>
            </TabItem>
            <TabItem Header="Debug" Visibility="{Binding Path=CurrentViewModelRemoteController.MinimalViewVis}">
                <Grid MaxWidth="510">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" MaxHeight="120px" />
                    </Grid.RowDefinitions>

                    <Border Name="Multiplexer"   Margin="5,5,5,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="0" Grid.Column="0">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="10px"/>
                            </Grid.RowDefinitions>
                            <Label Margin="10,0" Grid.Column="0" Grid.Row="0"  Grid.RowSpan="2" Content="MULTIPLEXER" HorizontalAlignment="Center"  VerticalAlignment="Top"   Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                            <StackPanel Grid.Row="1"  Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Label Margin="0" Content="X: " HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <TextBox  x:Name="valueX" HorizontalAlignment="Left" Height="26"
                              TextWrapping="Wrap" Text="{Binding Path=CurrentTestDebugTab.MuxModel.ValueX}" 
                             VerticalAlignment="Top" Width="59" Margin="10,0"/>
                                <Label  Content="Y: " HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0"/>

                                <TextBox x:Name="valueY" HorizontalAlignment="Left" Height="26"
                             TextWrapping="Wrap" Text="{Binding Path=CurrentTestDebugTab.MuxModel.ValueY}" Margin="10,0" 
                             VerticalAlignment="Top" Width="59"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Center">
                                <Button  Grid.Row="2" Name="setPinsButton" Content="Set pins"  Style="{StaticResource RedButtonFilled}" 
                Width="90" Height="24" FontSize="10"
               Command="{Binding ConnectPinsCommand}"/>

                                <Button  Grid.Row="2" x:Name="resetMux" Content="Reset multiplexer"  Style="{StaticResource RedButtonFilled}" 
                 Width="90" Height="24" FontSize="10" Margin="5"
              Command="{Binding ResetMuxCommand}" />
                            </StackPanel>

                        </Grid>
                    </Border>

                    <Border Name="Pins"   Margin="5,5,5,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="1" Grid.Column="1" Grid.RowSpan="1" Grid.ColumnSpan="1">
                        <Border.Effect>
                            <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                        </Border.Effect>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30px"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="10px"/>
                            </Grid.RowDefinitions>
                            <Label Margin="10,0" Grid.Column="0" Grid.Row="0"  Grid.RowSpan="2" Content="PINS" HorizontalAlignment="Center"  VerticalAlignment="Top"   Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black"/>
                            <Border Margin="2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" MaxHeight="20px">
                                <TextBox  TextAlignment="Center" 
                 Text="{Binding Path=CurrentTestDebugTab.MuxModel.PinID}"  Margin="5,0"/>
                                <Button x:Name="readPin_button" FontSize="10" Width="50" Content="Read pin" Margin="5,0" Style="{StaticResource RedButtonFilled}" 
                Command="{Binding ReadPinCommand}" />
                                <Button x:Name="writePin_button" FontSize="10" Width="50" Content="Write pin"  Margin="5,0" Style="{StaticResource RedButtonFilled}" 
                Command="{Binding WritePinCommand}" />
                                <Button x:Name="reset_button" FontSize="10" Width="50" Content="Reset"  Margin="5,0" Style="{StaticResource RedButtonFilled}" 
                Command="{Binding ResetPinCommand}" />
                            </StackPanel>








                        </Grid>
                    </Border>


                </Grid>
            </TabItem>
            <TabItem Header="Information" Visibility="{Binding Path=CurrentViewModelRemoteController.MinimalViewVis}" x:Name="InformationTab">
                <Border MaxWidth="510" Name="XMLStatus"  Margin="10,5,5,5" BorderBrush="#FFF4F4F5" BorderThickness="0" CornerRadius="1" Background="WhiteSmoke" Grid.Row="1" Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="1">
                    <Border.Effect>
                        <DropShadowEffect Direction="270" Color="#FFE4E4E4" ShadowDepth="2" Opacity="0.4" RenderingBias="Quality" />
                    </Border.Effect>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30px"/>
                            <RowDefinition Height="197*"/>
                            <RowDefinition Height="35*"/>

                        </Grid.RowDefinitions>
                        <Label Margin="19,0" Grid.Column="0" Grid.Row="0" Content="DEVICE STATUS" HorizontalAlignment="Center"  VerticalAlignment="Top"   Background="{x:Null}" Foreground="#FF323C46" FontFamily="Segoe UI Black" Height="26" Width="103"/>
                        <Border Margin="2,0,2,2" VerticalAlignment="Bottom"  Grid.Row="0" HorizontalAlignment="Stretch" Height="1px" Background="#FFE1E8EE"/>
                        <TextBox Name="RaspiConfig" Text="{Binding Path=CurrentViewModelRemoteController.RaspiConfigString}" TextWrapping="Wrap" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="10,10,10,3"/>
                        <Button Grid.Row="2" HorizontalAlignment="Center"  Style="{StaticResource RedButtonFilled}" Width="121" MaxHeight="25px"
                                Command="{Binding GetRaspiConfigCommand}" Margin="10,4,10,9"  ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <TextBlock Text="Get Current Configuration" FontFamily="Arial" FontSize="8"/>
                            </StackPanel>
                        </Button>

                    </Grid>
                </Border>
            </TabItem>

        </TabControl>
    </Grid>
</UserControl>